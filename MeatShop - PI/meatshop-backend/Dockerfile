# ============================================
# ğŸ§© STAGE 1 â€” BUILD
# ============================================
FROM node:20-alpine AS builder

# Define diretÃ³rio de trabalho
WORKDIR /usr/src/app

# Copia apenas os arquivos de dependÃªncias primeiro (melhor cache)
COPY package*.json ./

# Instala todas as dependÃªncias (incluindo dev)
RUN npm ci

# Instala o Nest CLI globalmente para compilar
RUN npm install -g @nestjs/cli

# Copia o restante do cÃ³digo-fonte
COPY . .

# Gera o build (compila TypeScript â†’ JavaScript)
RUN npm run build


# ============================================
# ğŸš€ STAGE 2 â€” PRODUÃ‡ÃƒO
# ============================================
FROM node:20-alpine

# DiretÃ³rio de trabalho
WORKDIR /usr/src/app

# Copia apenas o resultado do build da stage anterior
COPY --from=builder /usr/src/app/dist ./dist
COPY package*.json ./

# Instala apenas dependÃªncias de produÃ§Ã£o
RUN npm ci --omit=dev

# Define variÃ¡veis de ambiente padrÃ£o
ENV NODE_ENV=production \
    PORT=3001 \
    TZ=America/Sao_Paulo

# ExpÃµe a porta usada pelo backend
EXPOSE 3001

# Volumes persistentes (banco e logs)
VOLUME ["/usr/src/app/data", "/usr/src/app/logs"]

# Comando padrÃ£o de inicializaÃ§Ã£o
CMD ["node", "dist/main.js"]
